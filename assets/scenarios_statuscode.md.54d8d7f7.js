import{_ as s,c as a,o as n,a as t}from"./app.a146e424.js";const h=JSON.parse('{"title":"Http Status Codes","description":"","frontmatter":{},"headers":[],"relativePath":"scenarios/statuscode.md"}'),e={name:"scenarios/statuscode.md"},o=t(`<h1 id="http-status-codes" tabindex="-1">Http Status Codes <a class="header-anchor" href="#http-status-codes" aria-hidden="true">#</a></h1><p>You can declaratively check the status code with this syntax:</p><p><a id="snippet-sample_check_the_status_code"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">check_the_status</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IAlbaHost</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">system</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">_</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Shorthand for saying that the StatusCode should be 200</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StatusCodeShouldBeOk</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Or a specific status code</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StatusCodeShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">403</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Ignore the status code altogether</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">IgnoreStatusCode</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/StatusCodes.cs#L7-L22" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_check_the_status_code" title="Start of snippet">anchor</a></sup></p><p>Do note that by default, if you do not specify the expected status code, Alba assumes that the request should return 200 (OK) and will fail the scenario if a different status code is found. You can ignore that check with the <code>Scenario.IgnoreStatusCode()</code> method.</p>`,6),p=[o];function l(c,r,i,y,F,d){return n(),a("div",null,p)}const u=s(e,[["render",l]]);export{h as __pageData,u as default};
