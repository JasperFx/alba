import{o as n,c as s,a as t,b as a,d as e}from"./app.ba9243e9.js";const o='{"title":"Alba Setup","description":"","frontmatter":{},"headers":[{"level":2,"title":"Initializing AlbaHost with IHostBuilder","slug":"initializing-albahost-with-ihostbuilder"},{"level":2,"title":"Initializing AlbaHost with WebApplicationFactory","slug":"initializing-albahost-with-webapplicationfactory"},{"level":2,"title":"Running a Scenario","slug":"running-a-scenario"},{"level":2,"title":"Customizing the System for Testing","slug":"customizing-the-system-for-testing"}],"relativePath":"guide/hosting.md","lastUpdated":1638457516087}',c={},p=a("h1",{id:"alba-setup"},[a("a",{class:"header-anchor",href:"#alba-setup","aria-hidden":"true"},"#"),e(" Alba Setup")],-1),l=a("p",null,[e("To get started with Alba, just add a Nuget reference to the Alba library to your testing project that should also be referencing the "),a("a",{href:"http://ASP.Net",target:"_blank",rel:"noopener noreferrer"},"ASP.Net"),e(' Core project that you\'re going to be testing. When using Alba, you actually bootstrap your web application in memory using either the "older" '),a("a",{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.hosting.hostbuilder?view=dotnet-plat-ext-6.0",target:"_blank",rel:"noopener noreferrer"},"HostBuilder model"),e(" or the newer "),a("a",{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.testing.webapplicationfactory-1?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"},"WebApplicationFactory"),e(" model , then pass the root "),a("code",null,"IHost"),e(" of the running application to Alba's "),a("code",null,"AlbaHost"),e(", which will be the entry point to using Alba in all of your integration tests.")],-1),i=a("p",null,[a("code",null,"AlbaHost"),e(" is shown in the class diagram below:")],-1),u=a("p",null,[a("img",{src:"/alba/assets/ClassDiagram.drawio.4e6d0bc2.png",alt:"AlbaHost Class Diagram"})],-1),r=a("p",null,[a("code",null,"AlbaHost"),e(" implements the "),a("a",{href:"http://ASP.Net",target:"_blank",rel:"noopener noreferrer"},"ASP.Net"),e(" Core "),a("a",{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.hosting.ihost?view=dotnet-plat-ext-6.0",target:"_blank",rel:"noopener noreferrer"},"IHost"),e(" interface for convenience and familiarity. Internally it is tracking the actual "),a("code",null,"IHost"),e(" for your application running in memory as well as an instance of the "),a("a",{href:"http://ASP.Net",target:"_blank",rel:"noopener noreferrer"},"ASP.Net"),e(" Core "),a("a",{href:"https://docs.microsoft.com/en-us/aspnet/core/test/integration-tests?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"},"TestServer"),e(" that will actually be used to execute HTTP requests against the application in memory.")],-1),k=a("p",null,[e("In the following sections I'll show you how to bootstrap your "),a("a",{href:"http://ASP.Net",target:"_blank",rel:"noopener noreferrer"},"ASP.Net"),e(" Core system with Alba and start authoring specifications with the "),a("code",null,"AlbaHost"),e(" type.")],-1),m=a("h2",{id:"initializing-albahost-with-ihostbuilder"},[a("a",{class:"header-anchor",href:"#initializing-albahost-with-ihostbuilder","aria-hidden":"true"},"#"),e(" Initializing AlbaHost with IHostBuilder")],-1),h=a("p",null,[e("To bootstrap and connect any "),a("a",{href:"http://ASP.Net",target:"_blank",rel:"noopener noreferrer"},"ASP.Net"),e(" Core application to Alba, create a "),a("code",null,"AlbaHost"),e(" using the definition of your "),a("code",null,"IHostBuilder"),e(" as shown below:")],-1),d=a("p",null,[a("a",{id:"snippet-sample_quickstart3"})],-1),b=a("div",{class:"language-cs"},[a("pre",null,[a("code",null,[a("span",{class:"token punctuation"},"["),a("span",{class:"token attribute"},[a("span",{class:"token class-name"},"Fact")]),a("span",{class:"token punctuation"},"]"),e("\n"),a("span",{class:"token keyword"},"public"),e(),a("span",{class:"token keyword"},"async"),e(),a("span",{class:"token return-type class-name"},"Task"),e(),a("span",{class:"token function"},"build_host_from_Program"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),e("    \n"),a("span",{class:"token punctuation"},"{"),e("\n    "),a("span",{class:"token comment"},"// Bootstrap your application just as your real application does"),e("\n    "),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" hostBuilder "),a("span",{class:"token operator"},"="),e(" Program"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"CreateHostBuilder"),a("span",{class:"token punctuation"},"("),e("Array"),a("span",{class:"token punctuation"},"."),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"Empty"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),a("span",{class:"token keyword"},"string"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n    "),a("span",{class:"token keyword"},"await"),e(),a("span",{class:"token keyword"},"using"),e(),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" host "),a("span",{class:"token operator"},"="),e(),a("span",{class:"token keyword"},"new"),e(),a("span",{class:"token constructor-invocation class-name"},"AlbaHost"),a("span",{class:"token punctuation"},"("),e("hostBuilder"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n    "),a("span",{class:"token comment"},"// Just as a sample, I'll run a scenario against"),e("\n    "),a("span",{class:"token comment"},'// a "hello, world" application\'s root url'),e("\n    "),a("span",{class:"token keyword"},"await"),e(" host"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Scenario"),a("span",{class:"token punctuation"},"("),e("s "),a("span",{class:"token operator"},"=>"),e("\n    "),a("span",{class:"token punctuation"},"{"),e("\n        s"),a("span",{class:"token punctuation"},"."),e("Get"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Url"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"/"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n        s"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"ContentShouldBe"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"Hello, World!"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n"),a("span",{class:"token punctuation"},"}"),e("\n")])])],-1),f=a("p",null,[a("sup",null,[a("a",{href:"https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Quickstart3.cs#L15-L32",title:"Snippet source file"},"snippet source"),e(" | "),a("a",{href:"#snippet-sample_quickstart3",title:"Start of snippet"},"anchor")]),t(" endSnippet ")],-1),g=a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,[e("There are both synchronous and asynchronous methods to bootstrap an "),a("code",null,"AlbaHost"),e(". Depending on your test harness, I recommend using the asynchronous version whenever applicable.")])],-1),y=a("p",null,[e("Or alternatively, you can use one of the Alba extension methods off of "),a("code",null,"IHostBuilder"),e(" to start an "),a("code",null,"AlbaHost"),e(" object in a fluent interface style:")],-1),w=a("p",null,[a("a",{id:"snippet-sample_shorthand_bootstrapping"})],-1),_=a("div",{class:"language-cs"},[a("pre",null,[a("code",null,[a("span",{class:"token punctuation"},"["),a("span",{class:"token attribute"},[a("span",{class:"token class-name"},"Fact")]),a("span",{class:"token punctuation"},"]"),e("\n"),a("span",{class:"token keyword"},"public"),e(),a("span",{class:"token keyword"},"async"),e(),a("span",{class:"token return-type class-name"},"Task"),e(),a("span",{class:"token function"},"fluent_interface_bootstrapping"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),e("    \n"),a("span",{class:"token punctuation"},"{"),e("\n    "),a("span",{class:"token keyword"},"await"),e(),a("span",{class:"token keyword"},"using"),e(),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" host "),a("span",{class:"token operator"},"="),e(),a("span",{class:"token keyword"},"await"),e(" Program\n        "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"CreateHostBuilder"),a("span",{class:"token punctuation"},"("),e("Array"),a("span",{class:"token punctuation"},"."),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"Empty"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),a("span",{class:"token keyword"},"string"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),e("\n        "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"StartAlbaAsync"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n    "),a("span",{class:"token comment"},"// Just as a sample, I'll run a scenario against"),e("\n    "),a("span",{class:"token comment"},'// a "hello, world" application\'s root url'),e("\n    "),a("span",{class:"token keyword"},"await"),e(" host"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Scenario"),a("span",{class:"token punctuation"},"("),e("s "),a("span",{class:"token operator"},"=>"),e("\n    "),a("span",{class:"token punctuation"},"{"),e("\n        s"),a("span",{class:"token punctuation"},"."),e("Get"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Url"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"/"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n        s"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"ContentShouldBe"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"Hello, World!"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n"),a("span",{class:"token punctuation"},"}"),e("\n")])])],-1),A=a("p",null,[a("sup",null,[a("a",{href:"https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Quickstart3.cs#L35-L51",title:"Snippet source file"},"snippet source"),e(" | "),a("a",{href:"#snippet-sample_shorthand_bootstrapping",title:"Start of snippet"},"anchor")]),t(" endSnippet ")],-1),S=a("p",null,[e("The "),a("code",null,"AlbaHost"),e(" is an extension of the standard .Net Core "),a("a",{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.hosting.ihost?view=dotnet-plat-ext-5.0",target:"_blank",rel:"noopener noreferrer"},"IHost"),e(" interface with a few additions for testing support. While you can always access the underlying "),a("code",null,"TestServer"),e(" through the "),a("code",null,"IAlbaHost.Server"),e(" property, you're mostly going to be using the "),a("code",null,"Scenario()"),e(' method to write Alba "Scenario" tests.')],-1),v=a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,[e("To make the samples in this page easier to follow, I'm bootstrapping the "),a("code",null,"IAlbaHost"),e(" within each test. In real usage, bootstrapping your application is expensive and you will probably want to reuse the "),a("code",null,"IAlbaHost"),e(" between tests. See the integrations with NUnit and "),a("a",{href:"http://xUnit.Net",target:"_blank",rel:"noopener noreferrer"},"xUnit.Net"),e(" for examples.")])],-1),H=a("h2",{id:"initializing-albahost-with-webapplicationfactory"},[a("a",{class:"header-anchor",href:"#initializing-albahost-with-webapplicationfactory","aria-hidden":"true"},"#"),e(" Initializing AlbaHost with WebApplicationFactory")],-1),T=a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,"This functionality was added in Alba 6.0 and is only supported in .Net 6+.")],-1),x=a("p",null,[e("For "),a("a",{href:"http://ASP.Net",target:"_blank",rel:"noopener noreferrer"},"ASP.Net"),e(" Core 6, Microsoft introduced a new mechanism for configuring and bootstrapping web applications using "),a("a",{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.webapplicationbuilder?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"},"WebApplicationBuilder"),e(".")],-1),I=a("p",null,[e("As an example, consider this very small "),a("a",{href:"http://ASP.Net",target:"_blank",rel:"noopener noreferrer"},"ASP.Net"),e(" Core application utilizing the new "),a("a",{href:"https://docs.microsoft.com/en-us/aspnet/core/tutorials/min-web-api?view=aspnetcore-6.0&tabs=visual-studio",target:"_blank",rel:"noopener noreferrer"},"Minimal API"),e(" approach:")],-1),C=a("p",null,[a("a",{id:"snippet-sample_minimal_web_api"})],-1),P=a("div",{class:"language-cs"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"using"),e(),a("span",{class:"token namespace"},"System"),a("span",{class:"token punctuation"},";"),e("\n"),a("span",{class:"token keyword"},"using"),e(),a("span",{class:"token namespace"},[e("Microsoft"),a("span",{class:"token punctuation"},"."),e("AspNetCore"),a("span",{class:"token punctuation"},"."),e("Builder")]),a("span",{class:"token punctuation"},";"),e("\n\n"),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" builder "),a("span",{class:"token operator"},"="),e(" WebApplication"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"CreateBuilder"),a("span",{class:"token punctuation"},"("),e("args"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n"),a("span",{class:"token comment"},"// Add services to the container."),e("\n\n"),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" app "),a("span",{class:"token operator"},"="),e(" builder"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Build"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n"),a("span",{class:"token comment"},"// Configure the HTTP request pipeline."),e("\n\napp"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"UseHttpsRedirection"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\napp"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"MapGet"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"/"'),a("span",{class:"token punctuation"},","),e(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),e(),a("span",{class:"token operator"},"=>"),e(),a("span",{class:"token string"},'"Hello World!"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\napp"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"MapGet"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"/blowup"'),a("span",{class:"token punctuation"},","),e(" context "),a("span",{class:"token operator"},"=>"),e(),a("span",{class:"token keyword"},"throw"),e(),a("span",{class:"token keyword"},"new"),e(),a("span",{class:"token constructor-invocation class-name"},"Exception"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"Boo!"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\napp"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Run"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n")])])],-1),B=a("p",null,[a("sup",null,[a("a",{href:"https://github.com/JasperFx/alba/blob/master/src/WebApiNet6/Program.cs#L1-L22",title:"Snippet source file"},"snippet source"),e(" | "),a("a",{href:"#snippet-sample_minimal_web_api",title:"Start of snippet"},"anchor")]),t(" endSnippet ")],-1),N=a("p",null,[e("Using this project configuration mechanism, Alba is still usable, but this time we need to utilize "),a("a",{href:"http://ASP.Net",target:"_blank",rel:"noopener noreferrer"},"ASP.Net"),e(" Core's "),a("a",{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.testing.webapplicationfactory-1?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"},"WebApplicationFactory"),e(" tooling. Alba tries to make the usage of this a little easier with this syntax:")],-1),R=a("p",null,[a("a",{id:"snippet-sample_bootstrapping_with_web_application_factory"})],-1),W=a("div",{class:"language-cs"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"await"),e(),a("span",{class:"token keyword"},"using"),e(),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" host "),a("span",{class:"token operator"},"="),e(),a("span",{class:"token keyword"},"await"),e(" AlbaHost"),a("span",{class:"token punctuation"},"."),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"For"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),a("span",{class:"token keyword"},"global"),a("span",{class:"token punctuation"},":"),a("span",{class:"token punctuation"},":"),e("Program"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),e("x "),a("span",{class:"token operator"},"=>"),e("\n"),a("span",{class:"token punctuation"},"{"),e("\nx"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"ConfigureServices"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),e("context"),a("span",{class:"token punctuation"},","),e(" services"),a("span",{class:"token punctuation"},")"),e(),a("span",{class:"token operator"},"=>"),e("\n"),a("span",{class:"token punctuation"},"{"),e("\n   services"),a("span",{class:"token punctuation"},"."),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"AddSingleton"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),e("IService"),a("span",{class:"token punctuation"},","),e(" ServiceA"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n")])])],-1),F=a("p",null,[a("sup",null,[a("a",{href:"https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Acceptance/web_application_factory_usage.cs#L46-L54",title:"Snippet source file"},"snippet source"),e(" | "),a("a",{href:"#snippet-sample_bootstrapping_with_web_application_factory",title:"Start of snippet"},"anchor")]),t(" endSnippet ")],-1),z=a("p",null,[e("The "),a("code",null,"AlbaHost.For<T>(Action<WebApplicationFactory<T>> configuration)"),e(" method uses "),a("code",null,"WebApplicationFactory"),e(" and all its magic static member trickery to intercept and run the implied "),a("code",null,"Program.Main()"),e(' method from the sample application above while also allowing you to customize the application configuration at testing time. The "T" in this case is only a marker type so that '),a("code",null,"WebApplicationFactory"),e(" can choose the correct entry assembly for the web application that is being tested by Alba.")],-1),j=a("p",null,[e("See "),a("a",{href:"https://andrewlock.net/exploring-dotnet-6-part-6-supporting-integration-tests-with-webapplicationfactory-in-dotnet-6/",target:"_blank",rel:"noopener noreferrer"},"this blog post from Andrew Lock on the WebApplicationFactory mechanics"),e(" for more information.")],-1),L=a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,[a("code",null,"AlbaHost"),e(" is an expensive object to create, so you'll generally want to reuse it across tests.")])],-1),U=a("p",null,[e("Alba can be used with the new "),a("a",{href:"./.html"},"WebApplication")],-1),J=a("h2",{id:"running-a-scenario"},[a("a",{class:"header-anchor",href:"#running-a-scenario","aria-hidden":"true"},"#"),e(" Running a Scenario")],-1),q=a("p",null,[e("Once you have a "),a("code",null,"AlbaHost"),e(" object, you're ready to execute "),a("em",null,"Scenario's"),e(' through your system inside of tests. Below is a scenario for the "hello, world" application:')],-1),D=a("p",null,[a("a",{id:"snippet-sample_should_say_hello_world"})],-1),E=a("div",{class:"language-cs"},[a("pre",null,[a("code",null,[a("span",{class:"token punctuation"},"["),a("span",{class:"token attribute"},[a("span",{class:"token class-name"},"Fact")]),a("span",{class:"token punctuation"},"]"),e("\n"),a("span",{class:"token keyword"},"public"),e(),a("span",{class:"token keyword"},"async"),e(),a("span",{class:"token return-type class-name"},"Task"),e(),a("span",{class:"token function"},"should_say_hello_world"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),e("\n"),a("span",{class:"token punctuation"},"{"),e("\n    "),a("span",{class:"token keyword"},"await"),e(),a("span",{class:"token keyword"},"using"),e(),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" host "),a("span",{class:"token operator"},"="),e(),a("span",{class:"token keyword"},"await"),e(" Program\n        "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"CreateHostBuilder"),a("span",{class:"token punctuation"},"("),e("Array"),a("span",{class:"token punctuation"},"."),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"Empty"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),a("span",{class:"token keyword"},"string"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),e("\n        \n        "),a("span",{class:"token comment"},"// This extension method is just a shorter version"),e("\n        "),a("span",{class:"token comment"},"// of new AlbaHost(builder)"),e("\n        "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"StartAlbaAsync"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n    \n    "),a("span",{class:"token comment"},"// This runs an HTTP request and makes an assertion"),e("\n    "),a("span",{class:"token comment"},"// about the expected content of the response"),e("\n    "),a("span",{class:"token keyword"},"await"),e(" host"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Scenario"),a("span",{class:"token punctuation"},"("),e("_ "),a("span",{class:"token operator"},"=>"),e("\n    "),a("span",{class:"token punctuation"},"{"),e("\n        _"),a("span",{class:"token punctuation"},"."),e("Get"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Url"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"/"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n        _"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"ContentShouldBe"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"Hello, World!"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n        _"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"StatusCodeShouldBeOk"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n"),a("span",{class:"token punctuation"},"}"),e("\n")])])],-1),M=a("p",null,[a("sup",null,[a("a",{href:"https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Quickstart.cs#L30-L50",title:"Snippet source file"},"snippet source"),e(" | "),a("a",{href:"#snippet-sample_should_say_hello_world",title:"Start of snippet"},"anchor")]),t(" endSnippet ")],-1),G=a("p",null,[e("The single "),a("code",null,"Action<Scenario>"),e(" argument should completely configure the "),a("a",{href:"http://ASP.Net",target:"_blank",rel:"noopener noreferrer"},"ASP.Net"),e(),a("code",null,"HttpContext"),e(" for the request and apply any of the declarative response assertions. The actual HTTP request happens inside of the "),a("code",null,"Scenario()"),e(" method. The response contains the raw "),a("code",null,"HttpContext"),e(" and several helper methods to help you parse or read information from the response body:")],-1),O=a("p",null,[a("a",{id:"snippet-sample_iscenarioresult"})],-1),Q=a("div",{class:"language-cs"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"public"),e(),a("span",{class:"token keyword"},"interface"),e(),a("span",{class:"token class-name"},"IScenarioResult"),e("\n"),a("span",{class:"token punctuation"},"{"),e("\n    "),a("span",{class:"token comment"},"/// <summary>"),e("\n    "),a("span",{class:"token comment"},"///     Helpers to interrogate or read the HttpResponse.Body"),e("\n    "),a("span",{class:"token comment"},"///     of the request"),e("\n    "),a("span",{class:"token comment"},"/// </summary>"),e("\n    "),a("span",{class:"token punctuation"},"["),a("span",{class:"token function"},"Obsolete"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"Use the methods directly on IScenarioResult instead"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"]"),e("\n    "),a("span",{class:"token return-type class-name"},"HttpResponseBody"),e(" ResponseBody "),a("span",{class:"token punctuation"},"{"),e(),a("span",{class:"token keyword"},"get"),a("span",{class:"token punctuation"},";"),e(),a("span",{class:"token punctuation"},"}"),e("\n\n    "),a("span",{class:"token comment"},"/// <summary>"),e("\n    "),a("span",{class:"token comment"},"///     The raw HttpContext used during the scenario"),e("\n    "),a("span",{class:"token comment"},"/// </summary>"),e("\n    "),a("span",{class:"token return-type class-name"},"HttpContext"),e(" Context "),a("span",{class:"token punctuation"},"{"),e(),a("span",{class:"token keyword"},"get"),a("span",{class:"token punctuation"},";"),e(),a("span",{class:"token punctuation"},"}"),e("\n\n    "),a("span",{class:"token comment"},"/// <summary>"),e("\n    "),a("span",{class:"token comment"},"/// Read the contents of the HttpResponse.Body as text"),e("\n    "),a("span",{class:"token comment"},"/// </summary>"),e("\n    "),a("span",{class:"token comment"},"/// <returns></returns>"),e("\n    "),a("span",{class:"token return-type class-name"},[a("span",{class:"token keyword"},"string")]),e(),a("span",{class:"token function"},"ReadAsText"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n    "),a("span",{class:"token comment"},"/// <summary>"),e("\n    "),a("span",{class:"token comment"},"/// Read the contents of the HttpResponse.Body into an XmlDocument object"),e("\n    "),a("span",{class:"token comment"},"/// </summary>"),e("\n    "),a("span",{class:"token comment"},"/// <returns></returns>"),e("\n    "),a("span",{class:"token return-type class-name"},[e("XmlDocument"),a("span",{class:"token punctuation"},"?")]),e(),a("span",{class:"token function"},"ReadAsXml"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n    "),a("span",{class:"token comment"},"/// <summary>"),e("\n    "),a("span",{class:"token comment"},"/// Deserialize the contents of the HttpResponse.Body into an object"),e("\n    "),a("span",{class:"token comment"},"/// of type T using the built in XmlSerializer"),e("\n    "),a("span",{class:"token comment"},"/// </summary>"),e("\n    "),a("span",{class:"token comment"},'/// <typeparam name="T"></typeparam>'),e("\n    "),a("span",{class:"token comment"},"/// <returns></returns>"),e("\n    "),a("span",{class:"token return-type class-name"},[e("T"),a("span",{class:"token punctuation"},"?")]),e(),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"ReadAsXml"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),e("T"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),e(),a("span",{class:"token keyword"},"where"),e(),a("span",{class:"token class-name"},"T"),e(),a("span",{class:"token punctuation"},":"),e(),a("span",{class:"token type-list"},[a("span",{class:"token keyword"},"class")]),a("span",{class:"token punctuation"},";"),e("\n\n    "),a("span",{class:"token comment"},"/// <summary>"),e("\n    "),a("span",{class:"token comment"},"/// Deserialize the contents of the HttpResponse.Body into an object"),e("\n    "),a("span",{class:"token comment"},"/// of type T using the configured Json serializer"),e("\n    "),a("span",{class:"token comment"},"/// </summary>"),e("\n    "),a("span",{class:"token comment"},'/// <typeparam name="T"></typeparam>'),e("\n    "),a("span",{class:"token comment"},"/// <returns></returns>"),e("\n    "),a("span",{class:"token return-type class-name"},[e("T"),a("span",{class:"token punctuation"},"?")]),e(),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"ReadAsJson"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),e("T"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n    "),a("span",{class:"token return-type class-name"},[e("T"),a("span",{class:"token punctuation"},"?")]),e(),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"Read"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),e("T"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"string")]),e(" contentType"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n"),a("span",{class:"token punctuation"},"}"),e("\n")])])],-1),X=a("p",null,[a("sup",null,[a("a",{href:"https://github.com/JasperFx/alba/blob/master/src/Alba/IScenarioResult.cs#L8-L53",title:"Snippet source file"},"snippet source"),e(" | "),a("a",{href:"#snippet-sample_iscenarioresult",title:"Start of snippet"},"anchor")]),t(" endSnippet ")],-1),K=a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,[e("Alba v5 makes the old "),a("code",null,"HttpResponseBody"),e(" obsolete. It's still there, but the same functionality is readily available on "),a("code",null,"IScenarioResult"),e(".")])],-1),V=a("p",null,[e("If the existing "),a("em",null,"Scenario"),e(" assertions aren't enough to verify your test case, you can work directly against the raw response:")],-1),Y=a("p",null,[a("a",{id:"snippet-sample_should_say_hello_world_with_raw_objects"})],-1),Z=a("div",{class:"language-cs"},[a("pre",null,[a("code",null,[a("span",{class:"token punctuation"},"["),a("span",{class:"token attribute"},[a("span",{class:"token class-name"},"Fact")]),a("span",{class:"token punctuation"},"]"),e("\n"),a("span",{class:"token keyword"},"public"),e(),a("span",{class:"token keyword"},"async"),e(),a("span",{class:"token return-type class-name"},"Task"),e(),a("span",{class:"token function"},"should_say_hello_world_with_raw_objects"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),e("\n"),a("span",{class:"token punctuation"},"{"),e("\n    "),a("span",{class:"token keyword"},"using"),e(),a("span",{class:"token punctuation"},"("),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" system "),a("span",{class:"token operator"},"="),e(" AlbaHost"),a("span",{class:"token punctuation"},"."),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"ForStartup"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),e("Startup"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),e("\n    "),a("span",{class:"token punctuation"},"{"),e("\n        "),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" response "),a("span",{class:"token operator"},"="),e(),a("span",{class:"token keyword"},"await"),e(" system"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Scenario"),a("span",{class:"token punctuation"},"("),e("_ "),a("span",{class:"token operator"},"=>"),e("\n        "),a("span",{class:"token punctuation"},"{"),e("\n            _"),a("span",{class:"token punctuation"},"."),e("Get"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Url"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"/"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n            _"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"StatusCodeShouldBeOk"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n        "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n        response"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"ReadAsText"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),e("\n            "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"ShouldBe"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"Hello, World!"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n        "),a("span",{class:"token comment"},"// or you can go straight at the HttpContext"),e("\n        "),a("span",{class:"token class-name"},"Stream"),e(" responseStream "),a("span",{class:"token operator"},"="),e(" response"),a("span",{class:"token punctuation"},"."),e("Context"),a("span",{class:"token punctuation"},"."),e("Response"),a("span",{class:"token punctuation"},"."),e("Body"),a("span",{class:"token punctuation"},";"),e("\n        "),a("span",{class:"token comment"},"// do assertions directly on the responseStream"),e("\n    "),a("span",{class:"token punctuation"},"}"),e("\n"),a("span",{class:"token punctuation"},"}"),e("\n")])])],-1),$=a("p",null,[a("sup",null,[a("a",{href:"https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Quickstart.cs#L88-L108",title:"Snippet source file"},"snippet source"),e(" | "),a("a",{href:"#snippet-sample_should_say_hello_world_with_raw_objects",title:"Start of snippet"},"anchor")]),t(" endSnippet ")],-1),nn=a("p",null,[e('Do note that Alba quietly "rewinds" the '),a("code",null,"HttpContext.Response.Body"),e(" stream so that you can more readily read and work with the contents.")],-1),sn=a("h2",{id:"customizing-the-system-for-testing"},[a("a",{class:"header-anchor",href:"#customizing-the-system-for-testing","aria-hidden":"true"},"#"),e(" Customizing the System for Testing")],-1),tn=a("p",null,[e("If you also want to run real HTTP requests through your system in a test harness, you have more opportunities to configure the underlying "),a("a",{href:"https://docs.microsoft.com/en-us/aspnet/core/api/microsoft.aspnetcore.hosting.iwebhostbuilder",target:"_blank",rel:"noopener noreferrer"},"IWebHostBuilder"),e(" like so:")],-1),an=a("p",null,[a("a",{id:"snippet-sample_configuration_overrides"})],-1),en=a("div",{class:"language-cs"},[a("pre",null,[a("code",null,[a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" stubbedWebService "),a("span",{class:"token operator"},"="),e(),a("span",{class:"token keyword"},"new"),e(),a("span",{class:"token constructor-invocation class-name"},"StubbedWebService"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n"),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" builder "),a("span",{class:"token operator"},"="),e(" Host"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"CreateDefaultBuilder"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),e("\n    "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"ConfigureWebHostDefaults"),a("span",{class:"token punctuation"},"("),e("c "),a("span",{class:"token operator"},"=>"),e(" c"),a("span",{class:"token punctuation"},"."),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"UseStartup"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),e("Startup"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),e("\n\n    "),a("span",{class:"token comment"},"// override the environment if you need to"),e("\n    "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"UseEnvironment"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"Testing"'),a("span",{class:"token punctuation"},")"),e("\n\n    "),a("span",{class:"token comment"},"// override service registrations or internal options if you need to"),e("\n    "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"ConfigureServices"),a("span",{class:"token punctuation"},"("),e("s "),a("span",{class:"token operator"},"=>"),e("\n    "),a("span",{class:"token punctuation"},"{"),e("\n        s"),a("span",{class:"token punctuation"},"."),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"AddSingleton"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),e("IExternalWebService"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),e("stubbedWebService"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n        s"),a("span",{class:"token punctuation"},"."),a("span",{class:"token generic-method"},[a("span",{class:"token function"},"PostConfigure"),a("span",{class:"token generic class-name"},[a("span",{class:"token punctuation"},"<"),e("MvcNewtonsoftJsonOptions"),a("span",{class:"token punctuation"},">")])]),a("span",{class:"token punctuation"},"("),e("o "),a("span",{class:"token operator"},"=>"),e("\n            o"),a("span",{class:"token punctuation"},"."),e("SerializerSettings"),a("span",{class:"token punctuation"},"."),e("TypeNameHandling "),a("span",{class:"token operator"},"="),e(" TypeNameHandling"),a("span",{class:"token punctuation"},"."),e("All"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n\n"),a("span",{class:"token comment"},"// Create the SystemUnderTest"),e("\n"),a("span",{class:"token class-name"},[a("span",{class:"token keyword"},"var")]),e(" system "),a("span",{class:"token operator"},"="),e(),a("span",{class:"token keyword"},"new"),e(),a("span",{class:"token constructor-invocation class-name"},"AlbaHost"),a("span",{class:"token punctuation"},"("),e("builder"),a("span",{class:"token punctuation"},")"),e("\n    "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"BeforeEach"),a("span",{class:"token punctuation"},"("),e("httpContext "),a("span",{class:"token operator"},"=>"),e("\n    "),a("span",{class:"token punctuation"},"{"),e("\n        "),a("span",{class:"token comment"},"// do some data setup or clean up before every single test"),e("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),e("\n    "),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"AfterEach"),a("span",{class:"token punctuation"},"("),e("httpContext "),a("span",{class:"token operator"},"=>"),e("\n    "),a("span",{class:"token punctuation"},"{"),e("\n        "),a("span",{class:"token comment"},"// do any kind of cleanup after each scenario completes"),e("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),e("\n")])])],-1),on=a("p",null,[a("sup",null,[a("a",{href:"https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Quickstart.cs#L173-L200",title:"Snippet source file"},"snippet source"),e(" | "),a("a",{href:"#snippet-sample_configuration_overrides",title:"Start of snippet"},"anchor")]),t(" endSnippet ")],-1),cn=a("p",null,"A couple notes:",-1),pn=a("ul",null,[a("li",null,[e("Alba does not do anything to set the hosting environment, but you can do that yourself against "),a("code",null,"IWebHostBuilder")]),a("li",null,[e("If you build a "),a("code",null,"AlbaHost"),e(" with "),a("code",null,"AlbaHost.ForStartup<T>()"),e(", it will try to guess at the content root path by the name of assembly that holds the "),a("code",null,"Startup"),e(" class, but you may need to override that yourself.")])],-1),ln=a("p",null,[e("My shop is also using Alba within "),a("a",{href:"http://storyteller.github.io",target:"_blank",rel:"noopener noreferrer"},"Storyteller"),e(" specifications where we use a mix of headless Alba Scenario's and full HTTP requests for testing.")],-1);c.render=function(a,e,o,c,un,rn){return n(),s("div",null,[p,l,i,u,r,k,m,h,t(" snippet: sample_Quickstart3 "),d,b,f,g,y,t(" snippet: sample_shorthand_bootstrapping "),w,_,A,S,v,H,T,x,I,t(" snippet: sample_minimal_web_api "),C,P,B,N,t(" snippet: sample_bootstrapping_with_web_application_factory "),R,W,F,z,j,L,U,J,q,t(" snippet: sample_should_say_hello_world "),D,E,M,G,t(" snippet: sample_IScenarioResult "),O,Q,X,K,V,t(" snippet: sample_should_say_hello_world_with_raw_objects "),Y,Z,$,nn,sn,tn,t(" snippet: sample_configuration_overrides "),an,en,on,cn,pn,ln])};export{o as __pageData,c as default};
