import{_ as s,c as a,o as n,a as o}from"./app.ae0a27fd.js";const C=JSON.parse('{"title":"Alternative Bootstrapping Methods","description":"","frontmatter":{},"headers":[{"level":2,"title":"Initializing AlbaHost with IHostBuilder Directly","slug":"initializing-albahost-with-ihostbuilder-directly","link":"#initializing-albahost-with-ihostbuilder-directly","children":[]}],"relativePath":"guide/bootstrapping.md"}'),l={name:"guide/bootstrapping.md"},p=o(`<h1 id="alternative-bootstrapping-methods" tabindex="-1">Alternative Bootstrapping Methods <a class="header-anchor" href="#alternative-bootstrapping-methods" aria-hidden="true">#</a></h1><p>Whilst <code>AlbaHost.For&lt;T&gt;</code> is the preferred way of bootstrapping, other options exist in Alba to cover some older &amp; alternative scenarios.</p><h2 id="initializing-albahost-with-ihostbuilder-directly" tabindex="-1">Initializing AlbaHost with IHostBuilder Directly <a class="header-anchor" href="#initializing-albahost-with-ihostbuilder-directly" aria-hidden="true">#</a></h2><p>To bootstrap a <strong>ASP.NET Core Startup.cs-style</strong> application, create a <code>AlbaHost</code> using the definition of your <code>IHostBuilder</code> as shown below:</p><p><a id="snippet-sample_quickstart3"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Fact</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">build_host_from_Program</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Bootstrap your application just as your real application does</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">hostBuilder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Program</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateHostBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Empty</span><span style="color:#89DDFF;">&lt;string&gt;());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">host</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AlbaHost</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">hostBuilder</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Just as a sample, I&#39;ll run a scenario against</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// a &quot;hello, world&quot; application&#39;s root url</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> host</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        s</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ContentShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Quickstart3.cs#L35-L52" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_quickstart3" title="Start of snippet">anchor</a></sup></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>There are both synchronous and asynchronous methods to bootstrap an <code>AlbaHost</code>. Depending on your test harness, I recommend using the asynchronous version whenever applicable.</p></div><p>Or alternatively, you can use one of the Alba extension methods off of <code>IHostBuilder</code> to start an <code>AlbaHost</code> object in a fluent interface style:</p><p><a id="snippet-sample_shorthand_bootstrapping"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Fact</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fluent_interface_bootstrapping</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">host</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> Program</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateHostBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Empty</span><span style="color:#89DDFF;">&lt;string&gt;())</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StartAlbaAsync</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Just as a sample, I&#39;ll run a scenario against</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// a &quot;hello, world&quot; application&#39;s root url</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> host</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        s</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ContentShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Quickstart3.cs#L55-L71" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_shorthand_bootstrapping" title="Start of snippet">anchor</a></sup></p><p>The <code>AlbaHost</code> is an extension of the standard .Net Core <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.hosting.ihost?view=dotnet-plat-ext-5.0" target="_blank" rel="noreferrer">IHost</a> interface with a few additions for testing support. While you can always access the underlying <code>TestServer</code> through the <code>IAlbaHost.Server</code> property, you&#39;re mostly going to be using the <code>Scenario()</code> method to write Alba &quot;Scenario&quot; tests.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you build a <code>AlbaHost</code> with <code>AlbaHost.ForStartup&lt;T&gt;()</code>, it will try to guess at the content root path by the name of assembly that holds the <code>Startup</code> class, but you may need to override that yourself.</p></div>`,14),t=[p];function e(r,c,i,y,F,D){return n(),a("div",null,t)}const d=s(l,[["render",e]]);export{C as __pageData,d as default};
