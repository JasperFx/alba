import{_ as s,c as n,o as a,a as o}from"./app.ad1af933.js";const A=JSON.parse('{"title":"Security Extensions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Stub out all authentication","slug":"stub-out-all-authentication","link":"#stub-out-all-authentication","children":[]},{"level":2,"title":"Stub out JWT authentication","slug":"stub-out-jwt-authentication","link":"#stub-out-jwt-authentication","children":[]},{"level":2,"title":"Integration with JWT Authentication","slug":"integration-with-jwt-authentication","link":"#integration-with-jwt-authentication","children":[]},{"level":2,"title":"Windows Authentication","slug":"windows-authentication","link":"#windows-authentication","children":[]}],"relativePath":"guide/security.md"}'),l={name:"guide/security.md"},p=o(`<h1 id="security-extensions" tabindex="-1">Security Extensions <a class="header-anchor" href="#security-extensions" aria-hidden="true">#</a></h1><h2 id="stub-out-all-authentication" tabindex="-1">Stub out all authentication <a class="header-anchor" href="#stub-out-all-authentication" aria-hidden="true">#</a></h2><p>To just stub out all possible authentication inside your ASP.NET Core system in testing, you can use the new <code>AuthenticationStub</code> to automatically authenticate every request and build out a <code>ClaimsPrincipal</code> to your specification.</p><p>Here&#39;s a sample of bootstrapping an <code>AlbaHost</code> with the <code>AuthenticationStub</code>:</p><p><a id="snippet-sample_bootstrapping_with_stub_extension"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// This is a Alba extension that can &quot;stub&quot; out authentication</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">securityStub</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AuthenticationStub</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">With</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">With</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">JwtRegisteredClaimNames</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Email</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">guy@company.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithName</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jeremy</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// We&#39;re calling your real web service&#39;s configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">theHost </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AlbaHost</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">WebAppSecuredWithJwt</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">Program</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">securityStub</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Security/web_api_authentication_with_stub.cs#L21-L32" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_bootstrapping_with_stub_extension" title="Start of snippet">anchor</a></sup></p><p>When you need to test scenarios with different claims than the &quot;baseline&quot; claims defined on the <code>AuthenticationStub</code> object you created in the <code>AlbaHost</code> setup, you can use the <code>WithClaim()</code> method as shown below to add additional claims to the principal for only one scenario as shown below:</p><p><a id="snippet-sample_specify_specific_claims"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Fact</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">can_modify_claims_per_scenario</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">input</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Numbers</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Values </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> theHost</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// This is a custom claim that would only be used for the </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// JWT token in this individual test</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithClaim</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Claim</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">color</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RemoveClaim</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Post</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Json</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">input</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">ToUrl</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/math</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StatusCodeShouldBeOk</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">principal</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">User</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    principal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldNotBeNull</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    principal</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Claims</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Single</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Type </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">color</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    principal</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Claims</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Any</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Equals</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)).</span><span style="color:#82AAFF;">ShouldBeFalse</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Security/web_api_authentication_with_stub.cs#L84-L113" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_specify_specific_claims" title="Start of snippet">anchor</a></sup></p><h2 id="stub-out-jwt-authentication" tabindex="-1">Stub out JWT authentication <a class="header-anchor" href="#stub-out-jwt-authentication" aria-hidden="true">#</a></h2><p>If you have an application that uses JWT, bearer tokens as your primary means of authentication, you can use the new <code>JwtSecurityStub</code> to automatically add a valid JWT token string to the HTTP <code>Authorization</code> header before any scenarios are executed. Similar to the <code>AuthenticationStub</code>, the <code>JwtSecurityStub</code> allows you to specify a baseline set of claims that should be in the JWT token:</p><p><a id="snippet-sample_setup_jwt_stub"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// This is a new Alba extension that can &quot;stub&quot; out</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// JWT token authentication</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">jwtSecurityStub</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">JwtSecurityStub</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">With</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">With</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">JwtRegisteredClaimNames</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Email</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">guy@company.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// We&#39;re calling your real web service&#39;s configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">theHost </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AlbaHost</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">WebAppSecuredWithJwt</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">Program</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">jwtSecurityStub</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Security/web_api_authentication_with_jwt.cs#L21-L31" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_setup_jwt_stub" title="Start of snippet">anchor</a></sup></p><p>The <code>JwtSecurityStub</code> reaches into your application&#39;s configuration to find the security signing key for JWT tokens, and uses that key to sign the keys that it generates. The <code>JwtSecurityStub</code> will also disable any callouts to validate the JWT tokens with a real Open Id Connect server <strong>so you can test your service without an external token identity server running.</strong></p><p>The <code>JwtSecurityStub</code> will also honor the <code>WithClaim()</code> method to add additional claims on a scenario by scenario basis as shown in the previous section.</p><h2 id="integration-with-jwt-authentication" tabindex="-1">Integration with JWT Authentication <a class="header-anchor" href="#integration-with-jwt-authentication" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>All of these extensions depend on the <code>JwtBearerOptions</code> configuration from your application. The extensions will use the <code>Authority</code> property of <code>JwtBearerOptions</code> for the Url of the OIDC token server.</p></div><p>If you want to test your ASP.NET Core web services that are authenticated by an <a href="https://openid.net/connect/" target="_blank" rel="noreferrer">Open Id Connect</a> workflow <strong>and</strong> you also want to be testing through the authentication from the real OIDC identity server, Alba v5 comes with new extensions to automatically fetch and apply JWT tokens to scenario tests.</p><p>To use the OIDC <a href="https://auth0.com/docs/flows/client-credentials-flow" target="_blank" rel="noreferrer">Client Credentials workflow</a>, you can use the <code>OpenConnectClientCredentials</code> extension:</p><p><a id="snippet-sample_openconnectclientcredentials"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">oidc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">new</span><span style="color:#A6ACCD;"> OpenConnectClientCredentials</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// These three properties are mandatory, and</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// would refer to matching configuration in your</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// OIDC server</span></span>
<span class="line"><span style="color:#A6ACCD;">    ClientId </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ClientId,</span></span>
<span class="line"><span style="color:#A6ACCD;">    ClientSecret </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ClientSecret,</span></span>
<span class="line"><span style="color:#A6ACCD;">    Scope </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ApiScope</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">theHost </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AlbaHost</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">WebAppSecuredWithJwt</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">Program</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">x =&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    x.ConfigureServices((ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> collection</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        collection</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Configure</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">JwtBearerOptions</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">JwtBearerDefaults</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AuthenticationScheme</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">options</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Authority </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _fixture</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">IdentityServer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BaseAddress</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ToString</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BackchannelHttpHandler </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _fixture</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">IdentityServer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateHandler</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequireHttpsMetadata </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}, oidc)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Security/OpenConnectClientCredentialsTests.cs#L28-L51" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_openconnectclientcredentials" title="Start of snippet">anchor</a></sup></p><p>To use the OIDC <a href="https://docs.identityserver.io/en/release/quickstarts/2_resource_owner_passwords.html" target="_blank" rel="noreferrer">Resource Owner Password Grant</a> workflow, you can use the <code>OpenConnectUserPassword</code> extension:</p><p><a id="snippet-sample_applying_openconnectuserpassword"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">oidc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">new</span><span style="color:#A6ACCD;"> OpenConnectUserPassword</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// All of these properties are mandatory</span></span>
<span class="line"><span style="color:#A6ACCD;">    ClientId </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ClientId,</span></span>
<span class="line"><span style="color:#A6ACCD;">    ClientSecret </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ClientSecret,</span></span>
<span class="line"><span style="color:#A6ACCD;">    UserName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">alice</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    Password </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">alice</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">theHost </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AlbaHost</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">WebAppSecuredWithJwt</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">Program</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">x =&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    x.ConfigureServices((ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> collection</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        collection</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Configure</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">JwtBearerOptions</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">JwtBearerDefaults</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AuthenticationScheme</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">options</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Authority </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _fixture</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">IdentityServer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BaseAddress</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ToString</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BackchannelHttpHandler </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _fixture</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">IdentityServer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateHandler</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequireHttpsMetadata </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}, oidc)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Security/OpenConnectUserPasswordTests.cs#L28-L51" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_applying_openconnectuserpassword" title="Start of snippet">anchor</a></sup></p><p>With the <code>OpenConnectUserPassword</code> extension, you can also use a different user name and password for a single scenario with the <code>Scenario.UserAndPasswordIs(user, password)</code> extension method as shown below:</p><p><a id="snippet-sample_override_user_password"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Fact</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">post_to_a_secured_endpoint_with_jwt_with_overridden_user_and_password</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Building the input body</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">input</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Numbers</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Values </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> theHost</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Alba deals with Json serialization for us</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Post</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Json</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">input</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">ToUrl</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/math</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Override the user credentials for just this scenario</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UserAndPasswordIs</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bob</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bob</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Enforce that the HTTP Status Code is 200 Ok</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StatusCodeShouldBeOk</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">output</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ReadAsJson</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Result</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    output</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Sum</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    output</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Product</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">user</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">User</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FindFirst</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bob Smith</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Security/OpenConnectUserPasswordTests.cs#L165-L196" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_override_user_password" title="Start of snippet">anchor</a></sup></p><h2 id="windows-authentication" tabindex="-1">Windows Authentication <a class="header-anchor" href="#windows-authentication" aria-hidden="true">#</a></h2><p>To add support for windows authentication in your Alba specifications, we recommend checking out the <a href="https://github.com/IntelliTect/AspNetCore.TestHost.WindowsAuth" target="_blank" rel="noreferrer">AspNetCore.TestHost.WindowsAuth</a> project.</p>`,35),e=[p];function t(c,r,D,F,y,i){return a(),n("div",null,e)}const u=s(l,[["render",t]]);export{A as __pageData,u as default};
