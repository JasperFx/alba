import{_ as s,c as a,o as n,a as l}from"./app.fa9ca80a.js";const i=JSON.parse('{"title":"Sending Form Data","description":"","frontmatter":{},"headers":[{"level":2,"title":"Standard Form Data","slug":"standard-form-data","link":"#standard-form-data","children":[]},{"level":2,"title":"Multipart Form Data & File Uploads","slug":"multipart-form-data-file-uploads","link":"#multipart-form-data-file-uploads","children":[]}],"relativePath":"scenarios/formdata.md"}'),p={name:"scenarios/formdata.md"},o=l(`<h1 id="sending-form-data" tabindex="-1">Sending Form Data <a class="header-anchor" href="#sending-form-data" aria-hidden="true">#</a></h1><h2 id="standard-form-data" tabindex="-1">Standard Form Data <a class="header-anchor" href="#standard-form-data" aria-hidden="true">#</a></h2><p>Posting HTTP form data in the request can be done with the extension method shown below:</p><p><a id="snippet-sample_write_form_data"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">write_form_data</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IAlbaHost</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">system</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">form1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Dictionary</span><span style="color:#89DDFF;">&lt;string,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">what?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">now?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">really?</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">_</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// This writes the dictionary values to the HTTP</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// request as form data, and sets the content-length</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// header as well as setting the content-type</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// header to application/x-www-form-urlencoded</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteFormData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">form1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/FormData.cs#L14-L33" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_write_form_data" title="Start of snippet">anchor</a></sup></p><p>There&#39;s a second overload that attempts to use an object and its properties to populate the form data:</p><p><a id="snippet-sample_binding_against_a_model"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Fact</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">can_bind_to_form_data</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">system</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> AlbaHost</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ForStartup</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startup</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">input</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">InputModel</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        One </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">one</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        Two </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">two</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        Three </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">three</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">_</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Post</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FormData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">input</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ToUrl</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/gateway/insert</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    GatewayController</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LastInput</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldNotBeNull</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    GatewayController</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LastInput</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">One</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">one</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    GatewayController</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LastInput</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Two</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">two</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    GatewayController</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LastInput</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Three</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">three</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Acceptance/data_binding_in_mvc_app.cs#L12-L38" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_binding_against_a_model" title="Start of snippet">anchor</a></sup></p><p>Do note that this only adds first level properties, so if you need to deeper accessors like add &quot;Prop1.Prop2.Prop3,&quot; you&#39;ll have to resort to the dictionary approach.</p><h2 id="multipart-form-data-file-uploads" tabindex="-1">Multipart Form Data &amp; File Uploads <a class="header-anchor" href="#multipart-form-data-file-uploads" aria-hidden="true">#</a></h2><p>An additional extension exists that permits the usage of <code>MultipartFormDataContent</code>, which is commonly used for file uploads:</p><p><a id="snippet-sample_write_multipart_form_data"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">write_multipart_form_data</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IAlbaHost</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">system</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Read our file into a stream</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">imageFile</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> File</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">OpenRead</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">TestImage.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Extract the name from the path</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">imageFileName</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetFileName</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">imageFile</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Name</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Create the stream content</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">content</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StreamContent</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">imageFile</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Remember to manually set the media type as it won&#39;t be done automatically</span></span>
<span class="line"><span style="color:#A6ACCD;">    content</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Headers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ContentType </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MediaTypeHeaderValue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MediaTypeNames</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Image</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Jpeg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Create the MultiPartForm content &amp; add the file</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">formData</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MultipartFormDataContent</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    formData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">files</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> imageFileName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// If you have other content in the form object, you can add it as well!</span></span>
<span class="line"><span style="color:#A6ACCD;">    formData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StringContent</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">My additional metadata</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">metadata</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">result</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">_</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// This extension will write the content to the request</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// body and set the required headers</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Post</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MultipartFormData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">formData</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">ToUrl</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api/files/upload</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StatusCodeShouldBeOk</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/FormData.cs#L35-L62" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_write_multipart_form_data" title="Start of snippet">anchor</a></sup></p>`,16),e=[o];function t(r,c,D,F,y,C){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
