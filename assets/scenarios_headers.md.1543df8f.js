import{_ as s,c as a,o as n,a as e}from"./app.ae0a27fd.js";const C=JSON.parse('{"title":"Working with Headers","description":"","frontmatter":{},"headers":[{"level":2,"title":"Setting Request Headers","slug":"setting-request-headers","link":"#setting-request-headers","children":[]},{"level":2,"title":"Asserting on Expected Response Headers","slug":"asserting-on-expected-response-headers","link":"#asserting-on-expected-response-headers","children":[]}],"relativePath":"scenarios/headers.md"}'),o={name:"scenarios/headers.md"},p=e(`<h1 id="working-with-headers" tabindex="-1">Working with Headers <a class="header-anchor" href="#working-with-headers" aria-hidden="true">#</a></h1><p>We really didn&#39;t worry much about HTTP niceties when I started web programming in the late 90&#39;s, but you can no longer get away with that in today&#39;s world. To more correctly use HTTP, Alba comes with some helpers to deal with HTTP header values.</p><h2 id="setting-request-headers" tabindex="-1">Setting Request Headers <a class="header-anchor" href="#setting-request-headers" aria-hidden="true">#</a></h2><p>To set request headers, you can directly write against the <code>HttpContext.Request.Headers</code> collection:</p><p><a id="snippet-sample_setting_request_headers"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setting_request_headers</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IAlbaHost</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">system</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">_</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithRequestHeader</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Headers.cs#L29-L38" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_setting_request_headers" title="Start of snippet">anchor</a></sup></p><p>There are also some specific helpers for very common <a href="https://en.wikipedia.org/wiki/Content_negotiation" target="_blank" rel="noreferrer">content negotiation-related</a> headers:</p><p><a id="snippet-sample_conneg_helpers"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">conneg_helpers</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IAlbaHost</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">system</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">_</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Set the accepts header on the request</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Accepts</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Specify the etag header value</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Etag</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12345</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Set the content-type header on the request</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Post</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">ContentType</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// This is a superset of the code above that</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// will set the content-type header as well</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Post</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Json</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">InputModel</span><span style="color:#89DDFF;">()).</span><span style="color:#82AAFF;">ToUrl</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Headers.cs#L8-L27" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_conneg_helpers" title="Start of snippet">anchor</a></sup></p><p><strong>Do add extension methods off of the Alba <code>Scenario</code> class for common operations in your tests to remove some of the tedium.</strong></p><h2 id="asserting-on-expected-response-headers" tabindex="-1">Asserting on Expected Response Headers <a class="header-anchor" href="#asserting-on-expected-response-headers" aria-hidden="true">#</a></h2><p>Alba comes with some out of the box assertions to declaratively check expected header values:</p><p><a id="snippet-sample_asserting_on_header_values"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">asserting_on_header_values</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IAlbaHost</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">system</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scenario</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">_</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Assert that there is one and only one value equal to &quot;150&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Header</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content-length</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">SingleValueShouldEqual</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">150</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Assert that there is no value for this response header</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Header</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">connection</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">ShouldNotBeWritten</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Only write one value for this header</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Header</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">set-cookie</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">ShouldHaveOneNonNullValue</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Assert that the header has the given values</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Header</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">www-authenticate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">ShouldHaveValues</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NTLM</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Negotiate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Assert that the header matches a regular expression</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Header</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">location</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">SingleValueShouldMatch</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Regex</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">@&quot;</span><span style="color:#C3E88D;">^/items/\\d*$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Check the content-type header</span></span>
<span class="line"><span style="color:#A6ACCD;">        _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ContentTypeShouldBe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/alba/blob/master/src/Alba.Testing/Samples/Headers.cs#L41-L65" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_asserting_on_header_values" title="Start of snippet">anchor</a></sup></p><p>You do also have the ability to just interrogate the <code>HttpContext.Response</code> in your unit test methods for anything not covered in the helpers above.</p>`,18),l=[p];function t(r,c,F,D,y,i){return n(),a("div",null,l)}const h=s(o,[["render",t]]);export{C as __pageData,h as default};
